<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Notification</name>
        <label>Notification</label>
        <locationX>556</locationX>
        <locationY>513</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>ArrayOfUserID</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>New Chatter Groups</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>Get_Notification_Type.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>You&#39;ve been added to new chatter groups</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <decisions>
        <name>isAlreadyMember</name>
        <label>Already a Member?</label>
        <locationX>900</locationX>
        <locationY>237</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>isAlreadyMemberTrue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Member</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_Chatter_Groups</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
        <rules>
            <name>isAlreadyMemberFalse</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Member</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_to_Group</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <interviewLabel>Update Chatter Groups {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Update Chatter Groups</label>
    <loops>
        <name>Loop_Chatter_Groups</name>
        <label>Loop Chatter Groups</label>
        <locationX>587</locationX>
        <locationY>235</locationY>
        <assignNextValueToReference>GroupId</assignNextValueToReference>
        <collectionReference>GroupIds</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Get_Member</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Assign_to_Group</name>
        <label>Assign to Group</label>
        <locationX>764</locationX>
        <locationY>406</locationY>
        <connector>
            <targetReference>Loop_Chatter_Groups</targetReference>
        </connector>
        <inputAssignments>
            <field>CollaborationGroupId</field>
            <value>
                <elementReference>GroupId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MemberId</field>
            <value>
                <elementReference>UserId</elementReference>
            </value>
        </inputAssignments>
        <object>CollaborationGroupMember</object>
    </recordCreates>
    <recordLookups>
        <name>Get_Member</name>
        <label>Get Member</label>
        <locationX>755</locationX>
        <locationY>76</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>isAlreadyMember</targetReference>
        </connector>
        <filters>
            <field>CollaborationGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GroupId</elementReference>
            </value>
        </filters>
        <filters>
            <field>MemberId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>UserId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CollaborationGroupMember</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Notification_Type</name>
        <label>Get Notification Type</label>
        <locationX>259</locationX>
        <locationY>470</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetArrayOfUserId</targetReference>
        </connector>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Default</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>48</locationX>
        <locationY>86</locationY>
        <connector>
            <targetReference>GetGroupIds</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>GetArrayOfUserId</name>
        <label>GetArrayOfUserId</label>
        <locationX>294</locationX>
        <locationY>271</locationY>
        <connector>
            <targetReference>Loop_Chatter_Groups</targetReference>
        </connector>
        <flowName>Convert_ID_to_Array_of_IDs</flowName>
        <inputAssignments>
            <name>Id</name>
            <value>
                <elementReference>UserId</elementReference>
            </value>
        </inputAssignments>
        <outputAssignments>
            <assignToReference>ArrayOfUserID</assignToReference>
            <name>ArrayOfId</name>
        </outputAssignments>
    </subflows>
    <subflows>
        <name>GetGroupIds</name>
        <label>GetGroupIds</label>
        <locationX>56</locationX>
        <locationY>273</locationY>
        <connector>
            <targetReference>Get_Notification_Type</targetReference>
        </connector>
        <flowName>Parse_Multi_Select</flowName>
        <inputAssignments>
            <name>input_MultiSelectString</name>
            <value>
                <elementReference>GroupsConcatenated</elementReference>
            </value>
        </inputAssignments>
        <outputAssignments>
            <assignToReference>GroupIds</assignToReference>
            <name>output_ParsedMultiSelect</name>
        </outputAssignments>
    </subflows>
    <variables>
        <name>ArrayOfUserID</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>GroupId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>GroupIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>GroupNameOutput</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>GroupNameOutputString</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue/>
        </value>
    </variables>
    <variables>
        <name>Groups</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>CollaborationGroup</objectType>
    </variables>
    <variables>
        <name>GroupsConcatenated</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>UserId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
